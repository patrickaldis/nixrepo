# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];

  networking.hostName = "nixos-desktop";

  #OPENRAZER
  boot.extraModulePackages = [pkgs.linuxKernel.packages.linux_xanmod_latest.openrazer];
  hardware.openrazer.enable = true;

  #BOOTLOADER
  boot.loader.grub = {
    efiSupport = true;
    device= "nodev";
    gfxmodeEfi = "2560x1440x32";
    extraEntries = ''

    menuentry "Windows 10" {
      insmod part_gpt
      insmod fat
      search --no-floppy --fs-uuid --set=root 96D9-B9DB
      chainloader /EFI/Microsoft/Boot/bootmgfw.efi
    }
    '';
    extraEntriesBeforeNixOS = true;
    default = 1;
    font = "${pkgs.jetbrains-mono}/share/fonts/truetype/JetBrainsMono-Regular.ttf";
    fontSize = 28;
  };

  systemd.tmpfiles.rules = [
    "L+ /run/gdm/.config/monitors.xml - - - - ${pkgs.writeText "gdm-monitors.xml" ''
    <monitors version="2">
      <configuration>
        <logicalmonitor>
          <x>0</x>
          <y>0</y>
          <scale>1</scale>
          <primary>yes</primary>
          <monitor>
            <monitorspec>
              <connector>DP-1</connector>
              <vendor>MSI</vendor>
              <product>MSI MPG273CQR</product>
              <serial>0x00000138</serial>
            </monitorspec>
            <mode>
              <width>2560</width>
              <height>1440</height>
              <rate>164.802</rate>
            </mode>
          </monitor>
        </logicalmonitor>
      </configuration>
    </monitors>
    ''}"
  ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/c778f3d2-4dbd-429a-87bd-a3ec612f2f33";
      fsType = "ext4";
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/96D9-B9DB";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;
}
